%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PRIORITY-BASED COLLABORATIVE FUNCTIONAL LINK ADAPTIVE FILTERS FOR 
% NONLINEAR SYSTEM IDENTIFICATION
%
% 01 June 2013
%
% Danilo Comminiello
%
% Department of Information, Electronic and Telecommunication Engineering 
% 'Sapienza' University of Rome
% Via Eudossiana,18, I-00184 Roma, Italy
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


clear all; close all; clc
disp('***************************************************************************');
disp('***    PRIORITY-BASED COLLABORATIVE FUNCTIONAL LINK ADAPTIVE FILTERS    ***');
disp('***                           EXPERIMENT #1                             ***');
disp('***************************************************************************');




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                           INITIALIZATION STAGE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------Initialization of global parameters----------------------------------------------%
[y,Fs]= audioread('C:\Users\NCC\Desktop\New folder\attachments_4\cleanfemale01.wav');    % AIR T60=150ms truncated after 300 samples

Lx   = 300;                                                                                 % Signal length
nRun = 100;                                                                                % Number of runs for the avarage
nf = 1;                                                                                     % Number of fragments
M =7;                                                                                      % Filter length

%----------Scenario generatsion--------------------------------------------------------------%
aAR = 0.8;                                                                                  % Coefficient a of the AR1 signal: 0.8 or 0.9
w0 = 2*rand(M, nf) - 1;                                                                     % Generate nf impulse responses whose coefficients are comprised in [-1,1]

%----------Initialization of the NLMS filter------------------------------------------------%
muL = 0.2;                                                                                  % Default step size parameter for NLMS filters
deltaL = 1e-3;                                                                              % Default regularization factor for NLMS filters
wiL = zeros(M, 1);                                                                                    % Weight initialization
eNLMS = zeros(Lx,1);                                                                        % NLMS error signal initialization
yNLMS = zeros(Lx,1);                                                                        % NLMS output signal initialization
navemseL = zeros(Lx,1);                                                                     % Non-averaged EMSE buffer initialization for the linear APA filter

%----------Initialization of the CFLAF-NLMS filter #1---------------------------------------%
muFL1 = 0.2;                                                                                % Default step size parameter for CFLAF-NLMS filters
exord1 = 2 ;                                                                                 % Default expansion order
Mi1 = M;                                                                                    % Default input length for the expanded buffer
Me1 = Mi1*exord1;                                                                           % Default output length for the expanded buffer
deltaFL = 1e-3;                                                                             % Default regularization factor for NLMS filters
type1 = 'Cheb';                                                                             % Chebyshev series expansion
eCFL1 = zeros(Lx,1);                                                                        % CFLAF error signal initialization
yCFL1 = zeros(Lx,1);                                                                        % CFLAF output signal initialization
h1 = zeros(Lx,1);                                                                           % CFLAF shrinking vector
navemseCFL1 = zeros(Lx,1);                                                                  % Non-averaged EMSE buffer initialization for the CFLAF-NLMS #1

%----------Initialization of the CFLAF-NLMS filter #2---------------------------------------%
muFL2 = 0.1;                                                                                % Default step size parameter for CFLAF-NLMS filters
exord2 =  10;                                                                                 % Default expansion order
memord = 0;                                                                                 % Default memory order
Mi2 = M;                                                                                    % Default input length for the expanded buffer
Me2 = Mi2*(2*exord2) + (Mi2-memord)*(memord*2*exord2) + sum(((2:memord)-1)*2*exord2);       % Default output length for the expanded buffer
type2 = 'Tri';                                                                              % Trigonometric series expansion
eCFL2 = zeros(Lx,1);                                                                        % CFLAF error signal initialization
yCFL2 = zeros(Lx,1);                                                                        % CFLAF output signal initialization
h2 = zeros(Lx,1);                                                                           % CFLAF shrinking vector
navemseCFL2 = zeros(Lx,1);                                                                  % Non-averaged EMSE buffer initialization for the CFLAF-NLMS #2

%----------Initialization of the CFLAF-NLMS filter #2---------------------------------------%
muFL3 = 0.1;                                                                                % Default step size parameter for CFLAF-NLMS filters
exord3 = 4;                                                                                 % Default expansion order
Mi3 = M;                                                                                    % Default input length for the expanded buffer
Me3 = Mi3*exord3;                                                                           % Default output length for the expanded buffer
type3 = 'Leg';                                                                              % Trigonometric series expansion
eCFL3 = zeros(Lx,1);                                                                        % CFLAF error signal initialization
yCFL3 = zeros(Lx,1);                                                                        % CFLAF output signal initialization
h3 = zeros(Lx,1);                                                                           % CFLAF shrinking vector
navemseCFL3 = zeros(Lx,1);                                                                  % Non-averaged EMSE buffer initialization for the CFLAF-NLMS #3

%----------Initialization of the PBCFLAF-NLMS filter----------------------------------------%
muP = [muFL1; muFL2; muFL3];                                                                % Step size parameter vector for PBCFLAF-NLMS filter
exordP = [exord1; exord2; exord3];                                                          % Expansion order vector for PBCFLAF-NLMS filter
MiP = [Mi1; Mi2; Mi3];                                                                      % Input length vector for the expanded buffer
MeP = [Me1; Me2; Me3];                                                                      % Output length vector for the expanded buffer
ePBCFL = zeros(Lx,1);                                                                       % PBCFLAF error signal initialization
yPBCFL = zeros(Lx,1);                                                                       % PBCFLAF output signal initialization
H = zeros(Lx,3);                                                                            % PBCFLAF shrinking matrix
navemsePBCFL = zeros(Lx,1);                                                                 % Non-averaged EMSE buffer initialization for the PBCFLAF-NLMS

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                           MAIN STAGE
%%%%%%%%%5%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

for nR = 1:nRun

    if  (mod(nR,100)==0) 
       fprintf('\n%d / %d', nR, nRun); 
    end

    %----------Generation of coloured input and desired signals-----------------------------%
    x = ar1input(Lx, aAR);                                                                  % Generate coloured input signal
    [d, e0] = sigen(x, w0,1);                                                              % Loudspeaker distortion model memoryless

    %----------Create structures------------------------------------------------------------%
    F_NLMS = create_AF_NLMS(M, muL, deltaL, wiL);                                                   % Create NLMS adaptive filter
    F_CFLAF1 = create_CFLAF_NLMS(M, muL, muFL1, exord1, memord, Mi1, Me1, deltaL, deltaFL, type1);  % Create CFLAF-NLMS adaptive filter #1
    F_CFLAF2 = create_CFLAF_NLMS(M, muL, muFL2, exord2, memord, Mi2, Me2, deltaL, deltaFL, type2);  % Create CFLAF-NLMS adaptive filter #2
    F_CFLAF3 = create_CFLAF_NLMS(M, muL, muFL3, exord3, memord, Mi3, Me3, deltaL, deltaFL, type3);  % Create CFLAF-NLMS adaptive filter #3
    F_PBCFLAF = create_PBCFLAF_NLMS(M, muL, muP, exordP, memord, MiP, MeP, deltaL, deltaFL);        % Create PBCFLAF-NLMS adaptive filter
    
    %----------Main process-----------------------------------------------------------------%
    for n = 1:Lx

        %----------Perform the NLMS filtering-----------------------------------------------%
        [eNLMS(n), yNLMS(n), F_NLMS] = fnct_AF_NLMS(x(n), d(n), F_NLMS);                    % Provide current error and output samples for the linear NLMS filter
        navemseL(n) = navemseL(n) + (eNLMS(n) - e0(n))^2;                                   % Compute current EMSE for the linear NLMS filter
        disp(navemseL);
        %----------Perform the CFLAF-NLMS filtering #1--------------------------------------%
        [eCFL1(n), hCFL1, F_CFLAF1] = fnct_CFLAF_NLMS(x(n), d(n), F_CFLAF1);                % Provide current error and output samples for the CFLAF filter #1
        h1(n) = h1(n) + hCFL1;                                                              % Shrinkage parameter evolution for the CFLAF filter #1
        navemseCFL1(n) = navemseCFL1(n) + (eCFL1(n) - e0(n))^2;                             % Compute current EMSE for the CFLAF filter #1
        disp( navemseCFL1);
        %----------Perform the CFLAF-NLMS filtering #2--------------------------------------%
        [eCFL2(n), hCFL2, F_CFLAF2] = fnct_CFLAF_NLMS(x(n), d(n), F_CFLAF2);                % Provide current error and output samples for the CFLAF filter #2
        h2(n) = h2(n) + hCFL2;                                                              % Shrinkage parameter evolution for the CFLAF filter #2
        navemseCFL2(n) = navemseCFL2(n) + (eCFL2(n) - e0(n))^2;                             % Compute current EMSE for the CFLAF filter #2
        disp(navemseCFL2);
        %----------Perform the CFLAF-NLMS filtering #3--------------------------------------%
        [eCFL3(n), hCFL3, F_CFLAF3] = fnct_CFLAF_NLMS(x(n), d(n), F_CFLAF3);                % Provide current error and output samples for the CFLAF filter #3
        h3(n) = h3(n) + hCFL3;                                                              % Shrinkage parameter evolution for the CFLAF filter #3
        navemseCFL3(n) = navemseCFL3(n) + (eCFL3(n) - e0(n))^2;                             % Compute current EMSE for the CFLAF filter #3
        disp(navemseCFL3);
        %----------Perform the PBCFLAF-NLMS filtering---------------------------------------%
        [ePBCFL(n), hPBCFL, F_PBCFLAF] = fnct_PBCFLAF_NLMS(x(n), d(n), F_PBCFLAF);          % Provide current error and output samples for the PBCFLAF filter
        H(n,:) = H(n,:) + hPBCFL;                                                           % Shrinkage parameters evolution for the PBCFLAF filter
        navemsePBCFL(n) = navemsePBCFL(n) + (ePBCFL(n) - e0(n))^2;                          % Compute current EMSE for the PBCFLAF filter
        disp( navemsePBCFL);
    end
    
    clear F_NLMS F_CFLA1 F_CFLAF2 F_CFLAF3 F_PBCFLAF;
    
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                           PERFORMANCE MEASURES
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%----------Excess Mean Square Error---------------------------------------------------------%
emseNLMS = 10*log10(navemseL/nRun);                                                         % EMSE of the NLMS filter
emseCFL1 = 10*log10(navemseCFL1/nRun);                                                      % EMSE of the CFLAF filter #1
emseCFL2 = 10*log10(navemseCFL2/nRun);                                                      % EMSE of the CFLAF filter #2
emseCFL3 = 10*log10(navemseCFL3/nRun);                                                      % EMSE of the CFLAF filter #3
emsePBCFL = 10*log10(navemsePBCFL/nRun);                                                    % EMSE of the PBCFLAF filter

%----------Mixing Parameters Average--------------------------------------------------------%
h1 = h1/nRun;                                                                               % Shrinkage parameter average of the CFLAF filter #1
h2 = h2/nRun;                                                                               % Shrinkage parameter average of the CFLAF filter #2
h3 = h3/nRun;                                                                               % Shrinkage parameter average of the CFLAF filter #3

%---------------sigen------------------------------------------------------------------------
 



save('C:\Users\NCC\Desktop\New folder\attachments_4\Workspaces\TEST_emse.mat')

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                           PLOTS
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure1 = figure('PaperSize', [20.98 29.68], 'Color', [1 1 1]);
axes1 = axes('Parent', figure1, 'YGrid', 'on', 'XGrid', 'on', 'FontSize', 20);
box(axes1, 'on');
hold(axes1, 'all');
plot(emseNLMS, 'Parent', axes1, 'LineWidth', 2, 'Color', [0 0 0], 'DisplayName', 'NLMS', 'YDataSource', 'emseNLMS');
plot(emseCFL1, 'LineWidth', 2, 'DisplayName', 'Chebyshev CFLAF-NLMS', 'YDataSource', 'emseCFL1');
plot(emseCFL2, 'LineWidth', 2, 'DisplayName', 'Trigonometric CFLAF-NLMS', 'YDataSource', 'emseCFL2');
plot(emseCFL3, 'LineWidth', 2, 'DisplayName', 'Legendre CFLAF-NLMS', 'YDataSource', 'emseCFL3');
plot(emsePBCFL, 'LineWidth', 2, 'DisplayName', 'PBCFLAF-NLMS', 'YDataSource', 'emsePBCFL');
xlabel('Samples');
ylabel('EMSE [dB]');
legend(axes1,'show');

figure2 = figure('PaperSize', [20.98 29.68], 'Color', [1 1 1]);
axes2 = axes('Parent', figure2, 'YGrid', 'on', 'XGrid', 'on', 'FontSize', 20);
box(axes2, 'on');
hold(axes2, 'all');
plot(h1, 'Parent', axes2, 'LineWidth', 2, 'Color', [0 0 0], 'DisplayName', 'Chebyshev CFLAF-NLMS', 'YDataSource', 'h1');
xlabel('Samples');
ylabel('Shrinkage parameter');
legend(axes2,'show');

figure3 = figure('PaperSize', [20.98 29.68], 'Color', [1 1 1]);
axes3 = axes('Parent', figure3, 'YGrid', 'on', 'XGrid', 'on', 'FontSize', 20);
box(axes3, 'on');
hold(axes3, 'all');
plot(h2, 'Parent', axes3, 'LineWidth', 2, 'Color', [0 0 0], 'DisplayName', 'Trigonometric CFLAF-NLMS', 'YDataSource', 'h2');
xlabel('Samples');
ylabel('Shrinkage parameter');
legend(axes3,'show');

figure4 = figure('PaperSize', [20.98 29.68], 'Color', [1 1 1]);
axes4 = axes('Parent', figure4, 'YGrid', 'on', 'XGrid', 'on', 'FontSize', 20);
box(axes4, 'on');
hold(axes4, 'all');
plot(h3, 'Parent', axes4, 'LineWidth', 2, 'Color', [0 0 0], 'DisplayName', 'Legendre CFLAF-NLMS', 'YDataSource', 'h3');
xlabel('Samples');
ylabel('Shrinkage parameter');
legend(axes4,'show');

figure5 = figure('PaperSize', [20.98 29.68], 'Color', [1 1 1]);
axes5 = axes('Parent', figure5, 'YGrid', 'on', 'XGrid', 'on', 'FontSize', 20);
box(axes5, 'on');
hold(axes5, 'all');
plot(H(:,1), 'Parent', axes5, 'LineWidth', 2, 'DisplayName', 'Chebyshev CFLAF-NLMS', 'YDataSource', 'H(:,1)');
plot(H(:,2), 'LineWidth', 2, 'DisplayName', 'Trigonometric CFLAF-NLMS', 'YDataSource', 'H(:,2)');
plot(H(:,3), 'LineWidth', 2, 'DisplayName', 'Legendre CFLAF-NLMS', 'YDataSource', 'H(:,3)');
xlabel('Samples');
ylabel('Shrinkage parameters');
legend(axes5,'show');